version: '3.8'

services:

  backend:
    container_name: docker-backend
    build:
      context: ../bpmn-engine-core
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/camunda_db # Asume que PostgreSQL está en tu host
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
      BUSINESS_DATASOURCE_JDBC_URL: jdbc:postgresql://host.docker.internal:5432/business_db # Asume que PostgreSQL está en tu host
      BUSINESS_DATASOURCE_USERNAME: user
      BUSINESS_DATASOURCE_PASSWORD: pass
      SPRING_PROFILES_ACTIVE: docker
    #command: ["./wait-for-it.sh", "db", "3306", "--", "java", "-jar", "app.jar"] # Ya no se necesita wait-for-it para db
    command: ["java", "-jar", "app.jar"]
    ports:
      - "8080:8080"
    networks:
      - camunda_net

  frontend:
    container_name: docker-frontend
    build:
      context: ../angular-frontend/camunda-task-app
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - camunda_net

  node:
    container_name: docker-node
    build:
      context: ../chatbot-backend
    ports:
      - "4000:4000"
    depends_on:
      - backend
    environment:
      - BACKEND_URL=http://docker-backend:8080
    networks:
      - camunda_net

networks:
  camunda_net:

volumes:
  mysql_data: